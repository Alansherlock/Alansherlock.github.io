[{"title":"nginx代理端口，配置https域名","date":"2018-07-23T00:57:56.558Z","path":"2018/07/23/nginx如何配置/","text":"nginx配置 nginx 安装及配置apt-get update apt-get install nginx sudo service nginx reload,或者有其他的命令能启动就行 开始找NGINX配置文件，有可能在root目录下的usr/etc,或者usr/local,这两个找找，ps -ef | grep nginx 查找文件夹路径， vim nginx.conf,进入，点击i,进入编辑，然后在将以下的文件复制进去，以下需要修改的内容有证书编号，还有端口（如果也和我一样就不需要修改8888，其他详细配置请自行百度或者提issue提问我）123456789101112131415161718192021222324252627282930313233343536373839//配置代理的本地端口地址upstream hello &#123; server 127.0.0.1:8888;&#125;server &#123; listen 80; server_name 67.218.151.13; location / &#123; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Nginx-proxy true; proxy_pass http://hello; proxy_redirect off; &#125;&#125;//配置 https证书，按照阿里云证书下载指南，建立新的代理地址，将location更改为和上面一样server &#123; listen 443; server_name localhost; ssl on; root html; index index.html index.htm; ssl_certificate cert/21477828393053.pem; ssl_certificate_key cert/21477828393053.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / &#123; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Nginx-proxy true; proxy_pass http://hello; proxy_redirect off; &#125;&#125;","tags":[]},{"title":"react小笔记","date":"2018-07-23T00:57:32.102Z","path":"2018/07/23/react小笔记/","text":"对于react初步使用的总结 react 使用小注意 在使用react的时候，开始的时候因为this指向的问题用了bind，然而可以使用e =&gt; {this.tabClick}这种来让this的指向指向定义的那个类，减少代码量 在react中，类似vue指令v-if的写法则是{true?use this: use this},这种来判断； 在循环上，则需要定义好map方法，须记得return 出来当前书写完的这些","tags":[]},{"title":"移动端笔记","date":"2018-07-23T00:57:03.253Z","path":"2018/07/23/移动端小知识/","text":"对于移动端小点的总结 移动端笔记 在移动端使用canvas的时候，看的不是画布的大小，而是当前屏幕的大小，因此只要改变当前屏幕的宽高，即可做到让画布适应各个手机； devicePixelRatio，在安卓和iPhone的数值是不一样的，在适应iPhone6/7/8和iPhone6/7/8 plus的时候需要特别的注意这个，在项目中可以不改变这个的数值，根据屏幕的宽度来得知这个是哪种类型的，从而再乘以一个倍数来重新计算当前屏幕的宽高（代码回公司再贴，哈哈哈）； 在移动端布局上，如果遇到弹出键盘挤压当前页面，需要将根部标签的高度设置为当前屏幕的高度,才能在计算的时候不会再次挤压。 在遇到输入完成后键盘收起的时候，也仍需注意第三个的问题，需要计算好屏幕的高度； 由于是移动端，因此在书写一些css的时候，尽可能是用一些缩写的方式，例如背景的可以把所有的属性都写在一个而不是写很多条； 在利用一些css新属性的时候可以查询一下是否兼容性可以 在书写样式的时候，还发现如果当前div利用了背景渐变，则字体颜色是不能渐变的了 在边框上也是，一旦开启渐变，则边框不会有border-radius这个属性生效，做不到圆角 在调试真机的时候，则可以在谷歌下载一个二维码生成插件，利用连着同一WiFi（即网段相同），扫码即可调试","tags":[]},{"title":"搭建shadowsocks","date":"2018-07-21T08:43:53.129Z","path":"2018/07/21/vps搭建shadowsock/","text":"先拉取当前镜像，然后直接复制第一条命令 docker pull mritd/shadowsocks docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot; docker ps查看是否运行成功 docker是啥来着开始的时候，我这个小飞机不是自己搭建的，同事说是学不会的，我就很好奇了，这个时候我通过简单的查看和了解是利用了docker，我做前端的一脸懵逼，只能慢慢百度了解；原来，docker是括号里这个介绍（简介：Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。），装完各种奇怪的镜像后，慢慢就懂了，就是个壳，个壳可以往里塞东西；废话不多说，我们现在来了解下关于docker的基本语法；12345678910111213docker images //查看当前镜像列表，就是有多少个镜像装了docker ps // 查看当前正在跑的镜像docker ps -a //包括了未运行的docker rmi [镜像ID] // 删除当前的镜像，有时候会下载错了docker rm [容器ID] // 删除容器，就是ps列表里的了docker run ..docker start //等等请自行百度，太多了，嘻嘻 docker version简单的介绍了一些命令行我们进入主题，其实我们是用这几条来搞定的，哈哈哈，emmmmm; uname -a检查当前系统版本和内核版本（本人版本是16.04） apt-get install -y docker.io利用Linux安装命令，装docker.io,本人在安装的时候出现了英文，没关系，不懂就翻译；（本人自己在安装的时候提示需要先安装两个依赖，但是在朋友阿里的服务器确是不用的，看着提示来装就好了） 等待安装完毕，现在我们使用下面的命令启动 Docker：systemctl start docker 运行系统引导时启用 docker，命令：systemctl enable docker 拉取镜像安装shadowsocks先拉取当前镜像，然后直接复制第一条命令 docker pull mritd/shadowsocks docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot; docker ps查看是否运行成功","tags":[{"name":"other","slug":"other","permalink":"https://Alansherlock.github.io/tags/other/"}]},{"title":"Hello World","date":"2018-07-19T01:40:58.600Z","path":"2018/07/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]